// <auto-generated />
using System;
using DemoEF.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoEF.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251009063041_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoEF.DAL.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BCA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BIM"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BBS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BIT"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BSC CSIT"
                        });
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Learning"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Content Creation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Outdoor games"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Adventures"
                        });
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Agree")
                        .HasColumnType("bit");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Fee")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Profile")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students", t =>
                        {
                            t.HasCheckConstraint("CK_Student_Agree_98400", "[Agree] = 1");
                        });
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.StudentHobby", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("StudentHobbies");
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Prakash@123",
                            UserName = "Prakash"
                        });
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Student", b =>
                {
                    b.HasOne("DemoEF.DAL.Entities.Course", "Course")
                        .WithMany("students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.StudentHobby", b =>
                {
                    b.HasOne("DemoEF.DAL.Entities.Hobby", "Hobby")
                        .WithMany("StudentHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoEF.DAL.Entities.Student", "Student")
                        .WithMany("StudentHobbies")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Course", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Hobby", b =>
                {
                    b.Navigation("StudentHobbies");
                });

            modelBuilder.Entity("DemoEF.DAL.Entities.Student", b =>
                {
                    b.Navigation("StudentHobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
